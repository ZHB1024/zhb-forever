<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd" [
<!ENTITY contextInclude SYSTEM "org/springframework/web/context/WEB-INF/contextInclude.xml">
]>

<beans>
     
     <!-- 读取zhb_forever系统zhb_configer.properties文件 -->
     <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:zhb_configer.properties</value>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true" />
    </bean>
    
    <!-- 读取计算机系统环境变量中server.properties文件 -->
    <bean class="com.forever.zhb.config.ConfigurablePropertyPlaceholder">
        <property name="propertyLocationSystemProperty" value="propertyPath" />
        <property name="defaultPropertyFileName" value="server.properties" />
        <property name="ignoreResourceNotFound" value="false" />
    </bean>
    
    <bean id="wall-filter-config" class="com.alibaba.druid.wall.WallConfig">
        <property name="selectIntoAllow" value="false"></property>
        <property name="replaceAllow" value="false"></property>
        <property name="mergeAllow" value="false"></property>
        <property name="callAllow" value="false"></property>
        <property name="setAllow" value="false"></property>
        <property name="truncateAllow" value="false"></property>
        <property name="createTableAllow" value="false"></property>
        <property name="alterTableAllow" value="false"></property>
        <property name="dropTableAllow" value="false"></property>
        <property name="deleteWhereNoneCheck" value="true"></property>
        <property name="updateWhereNoneCheck" value="true"></property>
        <property name="conditionAndAlwayTrueAllow" value="false"></property>
        <property name="conditionAndAlwayFalseAllow" value="false"></property>
        <property name="mustParameterized" value="false"></property>
    </bean>
    <bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
        <property name="logViolation" value="true"></property>
        <property name="throwException" value="false"></property>
        <property name="config" ref="wall-filter-config"></property>
    </bean>
    
    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="mergeSql" value="true" />
    </bean>
    
    <bean id="parentDataSource" abstract="true">
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="50" />
        <property name="maxWait" value="6000" />
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT 1 FROM DUAL" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
        <property name="proxyFilters">
            <list>
                <ref bean="wall-filter" />
                <ref bean="stat-filter" />
            </list>
        </property>
        <!-- <property name="filters" value="slf4j" /> -->
        <property name="connectionProperties" value="druid.stat.slowSqlMillis=100" />
    </bean>
    
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" parent="parentDataSource">
        <property name="driverClassName" value="${sys.jdbc.datasourse.forever.driverClassName}"/>
        <property name="url" value="${sys.jdbc.datasourse.forever.url}"/>
        <property name="username" value="${sys.jdbc.datasourse.forever.username}"/>
        <property name="password" value="${sys.jdbc.datasourse.forever.password}"/>
    </bean>
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocations">
            <list>
                <value>
                    classpath*:hibernate-entity.xml
                </value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${sys.jdbc.hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${sys.jdbc.hibernate.hbm2ddl.auto}</prop> 
                <prop key="hibernate.show_sql">${sys.jdbc.hibernate.show_sql}</prop>
                <prop key="hiberante.format_sql">${sys.jdbc.hibernate.format_sql}</prop>
                <prop key="javax.persistence.validation.mode">none</prop>  
            </props>
        </property>
    </bean>
    
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    
    <bean id="transactionBase" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" lazy-init="true" abstract="true">
        <property name="transactionManager" ref="transactionManager"></property>
        <property name="transactionAttributes">
            <props>
                <prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="modify*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="delete*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="init*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="get*">PROPAGATION_NEVER</prop>
            </props>
        </property>
    </bean>
    
	<bean id="foreverDao" class="com.forever.zhb.dao.impl.ForeverDAOImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="loginLogDao" class="com.forever.zhb.dao.impl.LoginLogDAOImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="userDao" class="com.forever.zhb.dao.impl.UserDAOImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="accountDao" class="com.forever.zhb.dao.impl.AccountDAOImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="foreverManagerBase" class="com.forever.zhb.service.impl.ForeverManagerImpl">
		<property name="foreverDao" ref="foreverDao"></property>
	</bean>
	
	<bean id="loginLogManagerBase" class="com.forever.zhb.service.impl.LoginLogManagerImpl">
		<property name="loginLogDao" ref="loginLogDao"></property>
	</bean>

	<bean id="userManagerBase" class="com.forever.zhb.service.impl.UserManagerImpl">
		<property name="userDao" ref="userDao"></property>
		<property name="accountDao" ref="accountDao"></property>
	</bean>

	<bean id="accountManagerBase" class="com.forever.zhb.service.impl.AccountManagerImpl">
		<property name="accountDao" ref="accountDao"></property>
	</bean>

	<bean id="foreverManager" parent="transactionBase">
		<property name="target" ref="foreverManagerBase"></property>
	</bean>
	
	<bean id="loginLogManager" parent="transactionBase">
		<property name="target" ref="loginLogManagerBase"></property>
	</bean>

	<bean id="userManager" parent="transactionBase">
        <property name="target" ref="userManagerBase"></property>
	</bean>

	<bean id="accountManager"  parent="transactionBase">
        <property name="target" ref="accountManagerBase"></property>
	</bean>

</beans>